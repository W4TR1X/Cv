@inherits LayoutComponentBase

<MudThemeProvider @ref="@_mudThemeProvider" @bind-IsDarkMode=_isDarkMode />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar>
        @*<MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit"
        Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />*@
        <span>@PageInfoService.PageTitle</span>
        <MudSpacer />
        <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit"
                       OnClick="@(() => NavigationManager.NavigateTo("https://github.com/W4TR1X"))" />
        <MudToggleIconButton @bind-Toggled="_isDarkMode"
                             Icon="@Icons.Material.Filled.DarkMode"
                             Color="@Color.Inherit"
                             Title="Dark Mode"
                             ToggledIcon="@Icons.Material.Filled.LightMode"
                             ToggledColor="@Color.Inherit"
                             ToggledTitle="Light Mode" />
        @*<MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" />*@
    </MudAppBar>
    @*
    <MudDrawer ClipMode="DrawerClipMode.Always"
    Elevation="2" @bind-Open="@_drawerOpen">
    <NavMenu />
    </MudDrawer>
    *@
    <MudMainContent>
        @*@if (PageInfoService.PageTitle != null)
        {
        <MudPaper Elevation="25" Class="mud-width-full">
        <MudText>@PageInfoService.PageTitle</MudText>
        </MudPaper>
        }*@
        <MudContainer Fixed="true">
            @Body
        </MudContainer>
        <MudScrollToTop>
            <MudFab Color="Color.Tertiary" StartIcon="@Icons.Material.Filled.ArrowUpward" />
        </MudScrollToTop>
    </MudMainContent>
</MudLayout>

@code {
    [Inject] public PageInfoService PageInfoService { get; set; } = default!;
    [Inject] public NavigationManager NavigationManager { get; set; } = default!;

    private MudThemeProvider? _mudThemeProvider;

    bool _isDarkMode = false;
    bool _drawerOpen = false;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    protected override void OnParametersSet()
    {
        PageInfoService.AppTitleChanged += (t) => StateHasChanged();
        base.OnParametersSet();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _isDarkMode = await _mudThemeProvider.GetSystemPreference();
            StateHasChanged();
        }
    }
}